// Copyright: (c) 2019, Nathan Bliss / Sofware Automation Solutions Ltd
// GNU General Public License v2

package security

import (
	"fmt"
	//"io/ioutil"
	//"strings"
	//"regexp"
	//"os"
	//"../linux_command_line"
  "../template_populator"
  //"../kv_store"
)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
func check(e error) {
    if e != nil {
      fmt.Println(e.Error() + "\n")
      //panic(e)
    }
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
type Page struct {
	Title string
	Body []byte
	LogPath string
  LogPosition int
  Selected_VM string
  Cloud_Platform string
  Instance_construction_type string
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
type webform_struct struct {
  vm_name string
  ip_address string
  source_cidr string
  port string
  log_path string
  firewall_type string
  platform string
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
func Generate_firewall_port_close_rule(iptables_port_map map[string]map[string]map[string]string, vm_name string, firewall_rule_map_key string, protocol string, port_number string) {
  
  target_directory := "../ansible/close_firewall_port/roles/modify_ip_tables_rule/templates/"
  template_directory := "./templates/security/"
  
  template_buffer := template_populator.Load_file(template_directory + "close_firewall_port.sh.j3")
  template_populator.Populate_iptables(template_buffer, map[string]string{"protocol": protocol, "port": port_number, "source_cidr": iptables_port_map[vm_name][firewall_rule_map_key]["source_cidr"]}, target_directory + "close_firewall_port.sh.j2")  
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
func Generate_firewall_port_open_rule(iptables_port_map map[string]map[string]map[string]string, vm_name string, firewall_rule_map_key string, protocol string, port_number string) {
  
  target_directory := "../ansible/open_firewall_port/roles/modify_ip_tables_rule/templates/"
  template_directory := "./templates/security/"
  
  template_buffer := template_populator.Load_file(template_directory + "open_firewall_port.sh.j3")
  template_populator.Populate_iptables(template_buffer,  map[string]string{"protocol": protocol, "port": port_number, "source_cidr": iptables_port_map[vm_name][firewall_rule_map_key]["source_cidr"]}, target_directory + "open_firewall_port.sh.j2")
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

